package com.truemega.solfa.model;

/** added by Mohammed Fayez **/

import com.truemega.solfa.model.common.SolfaAppModule;
import com.truemega.solfa.model.util.ApplicationLogger;
import com.truemega.solfa.model.view.SolfaEmployeesTrackViewImpl;
import com.truemega.solfa.model.view.SolfaEmployeesTrackViewRowImpl;
import com.truemega.solfa.model.view.SolfaEmployeesViewImpl;

import com.truemega.solfa.model.view.SolfaEmployeesViewRowImpl;

import com.truemega.solfa.model.view.SolfaRequestsViewImpl;

import com.truemega.solfa.model.view.SolfaRequestsViewRowImpl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.text.SimpleDateFormat;

import java.util.ArrayList;

import java.util.Calendar;

import java.util.Date;

import oracle.jbo.JboException;
import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.ApplicationModuleImpl;
import oracle.jbo.server.ViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Mar 14 12:23:48 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SolfaAppModuleImpl extends ApplicationModuleImpl implements SolfaAppModule {
    private static final SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");

    /**
     * This is the default constructor (do not remove).
     */

    /**
     * Container's getter for SolfaEmployeesView.
     * @return SolfaEmployeesView
     */
    public SolfaEmployeesViewImpl getSolfaEmployeesView() {
        return (SolfaEmployeesViewImpl) findViewObject("SolfaEmployeesView");
    }

    /**
     * Container's getter for SolfaRequestsView.
     * @return SolfaRequestsView
     */
    public SolfaRequestsViewImpl getSolfaRequestsView() {
        return (SolfaRequestsViewImpl) findViewObject("SolfaRequestsView");
    }

    /**
     * Container's getter for SolfaRequestReadView.
     * @return SolfaRequestReadView
     */
    public ViewObjectImpl getSolfaRequestReadView() {
        return (ViewObjectImpl) findViewObject("SolfaRequestReadView");
    }

    /**
     * Container's getter for StatusView.
     * @return StatusView
     */
    public ViewObjectImpl getStatusView() {
        return (ViewObjectImpl) findViewObject("StatusView");
    }

    /**
     * Container's getter for YesNoView.
     * @return YesNoView
     */
    public ViewObjectImpl getYesNoView() {
        return (ViewObjectImpl) findViewObject("YesNoView");
    }


    /**   Added by Mohammed Fayez  */

    public void insertTrackData() {
        ApplicationLogger.log("-----** ------ [ Insert Track data for Employees  ] -----** ------",
                              ApplicationLogger.INFO);
        String query =
            "INSERT INTO SOLFA_EMPLOYEES_TRACK\n" + "     (HAS_SOLFA,SOLFA_AMOUNT,CREATED_DATE,STAFF_ID)\n" +
            "     (SELECT HAS_SOLFA,SOLFA_AMOUNT,CREATED_DATE,STAFF_ID FROM SOLFA_EMPLOYEES)";
        try {
            getDBTransaction().createStatement(0).execute(query);
        } catch (SQLException e) {
			e.printStackTrace();
            throw new JboException(e);
        }
    }


    public void removeEmployeeData() {

        String query = "DELETE FROM SOLFA_EMPLOYEES";
        try {
            getDBTransaction().createStatement(0).execute(query);
        } catch (SQLException e) {
			e.printStackTrace();
            throw new JboException(e);
        }
    }

    public void closeOpenedRequest() {
        ApplicationLogger.log("-----** ------ [ close opened request for Employees  ] -----** ------",
                              ApplicationLogger.INFO);
        String sql1 ="UPDATE SOLFA_REQUESTS set REQUEST_STATUS ='failed' where  REQUEST_STATUS = 'intiated'  and STAFF_ID IN(select SOLFA_EMPLOYEES.STAFF_ID from SOLFA_EMPLOYEES   where SOLFA_EMPLOYEES.HAS_SOLFA='N')";
        String sql2 ="UPDATE SOLFA_REQUESTS set REQUEST_STATUS ='closed' where  REQUEST_STATUS = 'opened'    and STAFF_ID IN(select SOLFA_EMPLOYEES.STAFF_ID from SOLFA_EMPLOYEES   where SOLFA_EMPLOYEES.HAS_SOLFA='N')";
        try {
            getDBTransaction().createStatement(0).execute(sql1);
            getDBTransaction().createStatement(0).execute(sql2);
            getDBTransaction().commit();
        } catch (SQLException e) {
			e.printStackTrace();
            throw new JboException(e);
        }

    }

    /** added by Mohammed Fayez **/

    public boolean isDirty() {
        return this.getDBTransaction().isDirty();

    }

    /**
     * Container's getter for SolfaEmployeesTrackView1.
     * @return SolfaEmployeesTrackView1
     */
    public SolfaEmployeesTrackViewImpl getSolfaEmployeesTrackView() {
        return (SolfaEmployeesTrackViewImpl) findViewObject("SolfaEmployeesTrackView");
    }

    /**
     * Container's getter for EmployeeView1.
     * @return EmployeeView1
     */
    public SolfaEmployeesViewImpl getEmployeeView() {
        return (SolfaEmployeesViewImpl) findViewObject("EmployeeView");
    }
}

