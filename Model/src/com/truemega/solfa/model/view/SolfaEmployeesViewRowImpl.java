package com.truemega.solfa.model.view;

import oracle.jbo.RowSet;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 02 14:25:06 EET 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SolfaEmployeesViewRowImpl extends ViewRowImpl {
    public static final int ENTITY_SOLFAEMPLOYEES = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SolfaEmpId,
        StaffId,
        HasSolfa,
        SolfaAmount,
        CreatedDate,
        YesNoView;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SOLFAEMPID = AttributesEnum.SolfaEmpId.index();
    public static final int STAFFID = AttributesEnum.StaffId.index();
    public static final int HASSOLFA = AttributesEnum.HasSolfa.index();
    public static final int SOLFAAMOUNT = AttributesEnum.SolfaAmount.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int YESNOVIEW = AttributesEnum.YesNoView.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SolfaEmployeesViewRowImpl() {
    }

    /**
     * Gets SolfaEmployees entity object.
     * @return the SolfaEmployees
     */
    public EntityImpl getSolfaEmployees() {
        return (EntityImpl) getEntity(ENTITY_SOLFAEMPLOYEES);
    }

    /**
     * Gets the attribute value for SOLFA_EMP_ID using the alias name SolfaEmpId.
     * @return the SOLFA_EMP_ID
     */
    public DBSequence getSolfaEmpId() {
        return (DBSequence) getAttributeInternal(SOLFAEMPID);
    }

    /**
     * Sets <code>value</code> as attribute value for SOLFA_EMP_ID using the alias name SolfaEmpId.
     * @param value value to set the SOLFA_EMP_ID
     */
    public void setSolfaEmpId(DBSequence value) {
        setAttributeInternal(SOLFAEMPID, value);
    }

    /**
     * Gets the attribute value for STAFF_ID using the alias name StaffId.
     * @return the STAFF_ID
     */
    public String getStaffId() {
        return (String) getAttributeInternal(STAFFID);
    }

    /**
     * Sets <code>value</code> as attribute value for STAFF_ID using the alias name StaffId.
     * @param value value to set the STAFF_ID
     */
    public void setStaffId(String value) {
        setAttributeInternal(STAFFID, value);
    }

    /**
     * Gets the attribute value for HAS_SOLFA using the alias name HasSolfa.
     * @return the HAS_SOLFA
     */
    public String getHasSolfa() {
        return (String) getAttributeInternal(HASSOLFA);
    }

    /**
     * Sets <code>value</code> as attribute value for HAS_SOLFA using the alias name HasSolfa.
     * @param value value to set the HAS_SOLFA
     */
    public void setHasSolfa(String value) {
        setAttributeInternal(HASSOLFA, value);
    }

    /**
     * Gets the attribute value for SOLFA_AMOUNT using the alias name SolfaAmount.
     * @return the SOLFA_AMOUNT
     */
    public String getSolfaAmount() {
        return (String) getAttributeInternal(SOLFAAMOUNT);
    }

    /**
     * Sets <code>value</code> as attribute value for SOLFA_AMOUNT using the alias name SolfaAmount.
     * @param value value to set the SOLFA_AMOUNT
     */
    public void setSolfaAmount(String value) {
        setAttributeInternal(SOLFAAMOUNT, value);
    }

    /**
     * Gets the attribute value for CREATED_DATE using the alias name CreatedDate.
     * @return the CREATED_DATE
     */
    public Date getCreatedDate() {
        return (Date) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the view accessor <code>RowSet</code> YesNoView.
     */
    public RowSet getYesNoView() {
        return (RowSet) getAttributeInternal(YESNOVIEW);
    }
}

